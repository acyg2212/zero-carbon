[{"/Users/aaroncygnarowicz/Desktop/coding/zero-carbon/zero-carbon/src/index.js":"1","/Users/aaroncygnarowicz/Desktop/coding/zero-carbon/zero-carbon/src/App.js":"2","/Users/aaroncygnarowicz/Desktop/coding/zero-carbon/zero-carbon/src/components/SplashPage.js":"3","/Users/aaroncygnarowicz/Desktop/coding/zero-carbon/zero-carbon/src/components/Modals/TravelCalculator.js":"4","/Users/aaroncygnarowicz/Desktop/coding/zero-carbon/zero-carbon/src/components/Modals/RestaurantRanker.js":"5","/Users/aaroncygnarowicz/Desktop/coding/zero-carbon/zero-carbon/src/components/data/Options.js":"6"},{"size":219,"mtime":1607206586006,"results":"7","hashOfConfig":"8"},{"size":178,"mtime":1607442887982,"results":"9","hashOfConfig":"8"},{"size":3330,"mtime":1607532355043,"results":"10","hashOfConfig":"8"},{"size":11248,"mtime":1607532456752,"results":"11","hashOfConfig":"8"},{"size":3965,"mtime":1607462999200,"results":"12","hashOfConfig":"8"},{"size":1038,"mtime":1607462999201,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"39u80e",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/aaroncygnarowicz/Desktop/coding/zero-carbon/zero-carbon/src/index.js",[],["28","29"],"/Users/aaroncygnarowicz/Desktop/coding/zero-carbon/zero-carbon/src/App.js",[],"/Users/aaroncygnarowicz/Desktop/coding/zero-carbon/zero-carbon/src/components/SplashPage.js",[],"/Users/aaroncygnarowicz/Desktop/coding/zero-carbon/zero-carbon/src/components/Modals/TravelCalculator.js",["30","31","32"],"/Users/aaroncygnarowicz/Desktop/coding/zero-carbon/zero-carbon/src/components/Modals/RestaurantRanker.js",["33","34"],"import React, { useState, useEffect } from 'react';\nimport { options } from '../data/Options'\n\nconsole.log(options)\n\nconst RestaurantRanker = () => {\n    const [count, setCount] = useState(2)\n    const [sorted, setSorted] = useState([])\n    const [newOptions, setNewOptions] = useState(options)\n    const [footprint, setFootprint] = useState(0)\n\n\n    const addItem = e => {\n\n        e.preventDefault()\n        const addSelect = document.createElement('select');\n        addSelect.id = `item${count}`\n        addSelect.name = `item${count}`\n        addSelect.className = 'selection'\n        addSelect.onchange = function () { editOptions() }\n        const select = document.getElementsByClassName('addSelect')[0]\n        const defaultOption = document.createElement('option')\n        defaultOption.innerHTML = 'Add Item'\n        addSelect.appendChild(defaultOption)\n        select.appendChild(addSelect)\n\n        newOptions.forEach(option => {\n            const addOption = document.createElement(\"option\")\n            addOption.value = option.name\n            addOption.innerHTML = option.name\n            addSelect.appendChild(addOption)\n        })\n        setCount(count + 1)\n    }\n\n    useEffect(() => {\n        setSorted(options.sort(function (a, b) {\n            return a.value - b.value\n        }))\n        console.log(sorted)\n    }, [])\n\n    const editOptions = e => {\n        const list = document.querySelectorAll('.selection')\n        let selected = []\n        list.forEach((item) => {\n            selected = [...selected, item.value]\n        })\n\n        const temp = []\n        options.forEach(item => {\n            if (!selected.includes(item.name)) {\n                temp.push(item)\n            }\n        })\n        setNewOptions(temp)\n\n        let total = 0\n        selected.forEach(item => {\n\n            options.forEach((option) => {\n                if (option.name == item) {\n                    total += option.value\n                }\n            })\n\n        })\n        setFootprint(total)\n    }\n\n    return (\n        <div>\n            <h3>What's in your meal? </h3>\n            <div className=\"best-worst-div\">\n                <div className=\"ranker-div\">\n                    <h4>Top 3 Foods (Best Greenhouse Gas Emissions per kg of food)</h4>\n                    {sorted.length > 0 ?\n                        <ol>\n                            <li>{sorted[0].name} {sorted[0].value}</li>\n                            <li>{sorted[1].name} {sorted[1].value}</li>\n                            <li>{sorted[2].name} {sorted[2].value}</li>\n                        </ol> :\n                        ''}\n\n                </div>\n                <div className=\"ranker-div\">\n                    <h4>Top 3 Foods (Worst Greenhouse Gas Emissions per kg of food)</h4>\n                    {sorted.length > 0 ?\n                        <ol>\n                            <li>{sorted[sorted.length - 1].name} {sorted[sorted.length - 1].value}</li>\n                            <li>{sorted[sorted.length - 2].name} {sorted[sorted.length - 2].value}</li>\n                            <li>{sorted[sorted.length - 3].name} {sorted[sorted.length - 3].value}</li>\n                        </ol> : \"\"}\n                </div>\n            </div>\n            <label for='item1'>Item 1</label>\n            <div className='addSelect'>\n                <select onChange={editOptions} className='selection' name='item1' id='item1'>\n                    <option>Add item</option>\n                    {options.map((option, idx) => (\n                        <option key={idx}>{option.name}</option>\n                    ))}\n                </select>\n            </div>\n            <button onClick={addItem}><h3>Add item</h3></button>\n            <div>\n                <h3>Carbon Footprint for this meal </h3>\n                <input for='emission' value={footprint} />\n                <label name='emission'>CO2</label>\n            </div>\n        </div>\n    )\n}\n\nexport default RestaurantRanker;\n","/Users/aaroncygnarowicz/Desktop/coding/zero-carbon/zero-carbon/src/components/data/Options.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":3,"column":7,"nodeType":"41","messageId":"42","endLine":3,"endColumn":10},{"ruleId":"43","severity":1,"message":"44","line":39,"column":8,"nodeType":"45","endLine":39,"endColumn":14,"suggestions":"46"},{"ruleId":"43","severity":1,"message":"47","line":73,"column":8,"nodeType":"45","endLine":73,"endColumn":15,"suggestions":"48"},{"ruleId":"43","severity":1,"message":"49","line":41,"column":8,"nodeType":"45","endLine":41,"endColumn":10,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":62,"column":33,"nodeType":"53","messageId":"54","endLine":62,"endColumn":35},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'env' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'year'. Either include it or remove the dependency array.","ArrayExpression",["57"],"React Hook useEffect has missing dependencies: 'make' and 'models'. Either include them or remove the dependency array.",["58"],"React Hook useEffect has a missing dependency: 'sorted'. Either include it or remove the dependency array.",["59"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [make, year]",{"range":"66","text":"67"},"Update the dependencies array to be: [make, model, models]",{"range":"68","text":"69"},"Update the dependencies array to be: [sorted]",{"range":"70","text":"71"},[1592,1598],"[make, year]",[2975,2982],"[make, model, models]",[1340,1342],"[sorted]"]